// Generated by view binder compiler. Do not edit!
package com.esp32.udpcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.esp32.udpcontrol.R;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnAllOff;

  @NonNull
  public final Button btnLed1;

  @NonNull
  public final Button btnLed2;

  @NonNull
  public final Button btnLed3;

  @NonNull
  public final Button btnLed4;

  @NonNull
  public final Button btnRefresh;

  @NonNull
  public final LineChart chart;

  @NonNull
  public final Switch switchConnection;

  @NonNull
  public final TextView txtConnectionStatus;

  @NonNull
  public final TextView txtDhtStatus;

  @NonNull
  public final TextView txtHumidity;

  @NonNull
  public final TextView txtLastUpdate;

  @NonNull
  public final TextView txtLight;

  @NonNull
  public final TextView txtTemperature;

  @NonNull
  public final TextView txtWifiStatus;

  private ActivityMainBinding(@NonNull ScrollView rootView, @NonNull Button btnAllOff,
      @NonNull Button btnLed1, @NonNull Button btnLed2, @NonNull Button btnLed3,
      @NonNull Button btnLed4, @NonNull Button btnRefresh, @NonNull LineChart chart,
      @NonNull Switch switchConnection, @NonNull TextView txtConnectionStatus,
      @NonNull TextView txtDhtStatus, @NonNull TextView txtHumidity,
      @NonNull TextView txtLastUpdate, @NonNull TextView txtLight, @NonNull TextView txtTemperature,
      @NonNull TextView txtWifiStatus) {
    this.rootView = rootView;
    this.btnAllOff = btnAllOff;
    this.btnLed1 = btnLed1;
    this.btnLed2 = btnLed2;
    this.btnLed3 = btnLed3;
    this.btnLed4 = btnLed4;
    this.btnRefresh = btnRefresh;
    this.chart = chart;
    this.switchConnection = switchConnection;
    this.txtConnectionStatus = txtConnectionStatus;
    this.txtDhtStatus = txtDhtStatus;
    this.txtHumidity = txtHumidity;
    this.txtLastUpdate = txtLastUpdate;
    this.txtLight = txtLight;
    this.txtTemperature = txtTemperature;
    this.txtWifiStatus = txtWifiStatus;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAllOff;
      Button btnAllOff = ViewBindings.findChildViewById(rootView, id);
      if (btnAllOff == null) {
        break missingId;
      }

      id = R.id.btnLed1;
      Button btnLed1 = ViewBindings.findChildViewById(rootView, id);
      if (btnLed1 == null) {
        break missingId;
      }

      id = R.id.btnLed2;
      Button btnLed2 = ViewBindings.findChildViewById(rootView, id);
      if (btnLed2 == null) {
        break missingId;
      }

      id = R.id.btnLed3;
      Button btnLed3 = ViewBindings.findChildViewById(rootView, id);
      if (btnLed3 == null) {
        break missingId;
      }

      id = R.id.btnLed4;
      Button btnLed4 = ViewBindings.findChildViewById(rootView, id);
      if (btnLed4 == null) {
        break missingId;
      }

      id = R.id.btnRefresh;
      Button btnRefresh = ViewBindings.findChildViewById(rootView, id);
      if (btnRefresh == null) {
        break missingId;
      }

      id = R.id.chart;
      LineChart chart = ViewBindings.findChildViewById(rootView, id);
      if (chart == null) {
        break missingId;
      }

      id = R.id.switchConnection;
      Switch switchConnection = ViewBindings.findChildViewById(rootView, id);
      if (switchConnection == null) {
        break missingId;
      }

      id = R.id.txtConnectionStatus;
      TextView txtConnectionStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtConnectionStatus == null) {
        break missingId;
      }

      id = R.id.txtDhtStatus;
      TextView txtDhtStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtDhtStatus == null) {
        break missingId;
      }

      id = R.id.txtHumidity;
      TextView txtHumidity = ViewBindings.findChildViewById(rootView, id);
      if (txtHumidity == null) {
        break missingId;
      }

      id = R.id.txtLastUpdate;
      TextView txtLastUpdate = ViewBindings.findChildViewById(rootView, id);
      if (txtLastUpdate == null) {
        break missingId;
      }

      id = R.id.txtLight;
      TextView txtLight = ViewBindings.findChildViewById(rootView, id);
      if (txtLight == null) {
        break missingId;
      }

      id = R.id.txtTemperature;
      TextView txtTemperature = ViewBindings.findChildViewById(rootView, id);
      if (txtTemperature == null) {
        break missingId;
      }

      id = R.id.txtWifiStatus;
      TextView txtWifiStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtWifiStatus == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, btnAllOff, btnLed1, btnLed2, btnLed3,
          btnLed4, btnRefresh, chart, switchConnection, txtConnectionStatus, txtDhtStatus,
          txtHumidity, txtLastUpdate, txtLight, txtTemperature, txtWifiStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
